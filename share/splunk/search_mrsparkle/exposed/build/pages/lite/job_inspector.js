!function(modules){function webpackJsonpCallback(data){for(var moduleId,chunkId,chunkIds=data[0],moreModules=data[1],executeModules=data[2],i=0,resolves=[];i<chunkIds.length;i++)chunkId=chunkIds[i],installedChunks[chunkId]&&resolves.push(installedChunks[chunkId][0]),installedChunks[chunkId]=0;for(moduleId in moreModules)Object.prototype.hasOwnProperty.call(moreModules,moduleId)&&(modules[moduleId]=moreModules[moduleId]);for(parentJsonpFunction&&parentJsonpFunction(data);resolves.length;)resolves.shift()();return deferredModules.push.apply(deferredModules,executeModules||[]),checkDeferredModules()}function checkDeferredModules(){for(var result,i=0;i<deferredModules.length;i++){for(var deferredModule=deferredModules[i],fulfilled=!0,j=1;j<deferredModule.length;j++){var depId=deferredModule[j];0!==installedChunks[depId]&&(fulfilled=!1)}fulfilled&&(deferredModules.splice(i--,1),result=__webpack_require__(__webpack_require__.s=deferredModule[0]))}return result}var installedModules={},installedChunks={45:0},deferredModules=[];function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.e=function(chunkId){var promises=[],installedChunkData=installedChunks[chunkId];if(0!==installedChunkData)if(installedChunkData)promises.push(installedChunkData[2]);else{var promise=new Promise(function(resolve,reject){installedChunkData=installedChunks[chunkId]=[resolve,reject]});promises.push(installedChunkData[2]=promise);var onScriptComplete,head=document.getElementsByTagName("head")[0],script=document.createElement("script");script.charset="utf-8",script.timeout=120,__webpack_require__.nc&&script.setAttribute("nonce",__webpack_require__.nc),script.src=function(chunkId){return __webpack_require__.p+""+({}[chunkId]||chunkId)+".js"}(chunkId),onScriptComplete=function(event){script.onerror=script.onload=null,clearTimeout(timeout);var chunk=installedChunks[chunkId];if(0!==chunk){if(chunk){var errorType=event&&("load"===event.type?"missing":event.type),realSrc=event&&event.target&&event.target.src,error=new Error("Loading chunk "+chunkId+" failed.\n("+errorType+": "+realSrc+")");error.type=errorType,error.request=realSrc,chunk[1](error)}installedChunks[chunkId]=void 0}};var timeout=setTimeout(function(){onScriptComplete({type:"timeout",target:script})},12e4);script.onerror=script.onload=onScriptComplete,head.appendChild(script)}return Promise.all(promises)},__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__.oe=function(err){throw console.error(err),err};var jsonpArray=window.webpackJsonp=window.webpackJsonp||[],oldJsonpFunction=jsonpArray.push.bind(jsonpArray);jsonpArray.push=webpackJsonpCallback,jsonpArray=jsonpArray.slice();for(var i=0;i<jsonpArray.length;i++)webpackJsonpCallback(jsonpArray[i]);var parentJsonpFunction=oldJsonpFunction;deferredModules.push([1757,0]),checkDeferredModules()}({1757:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__.p=function(){function getConfigValue(key,defaultValue){if(window.$C&&window.$C.hasOwnProperty(key))return window.$C[key];if(void 0!==defaultValue)return defaultValue;throw new Error("getConfigValue - "+key+" not set, no default provided")}return function(){for(var seg,len,output="",i=0,l=arguments.length;i<l;i++)(len=(seg=arguments[i].toString()).length)>1&&"/"==seg.charAt(len-1)&&(seg=seg.substring(0,len-1)),"/"!=seg.charAt(0)?output+="/"+seg:output+=seg;if("/"!=output){var segments=output.split("/"),firstseg=segments[1];if("static"==firstseg||"modules"==firstseg){var postfix=output.substring(firstseg.length+2,output.length);output="/"+firstseg,window.$C.BUILD_NUMBER&&(output+="/@"+window.$C.BUILD_NUMBER),window.$C.BUILD_PUSH_NUMBER&&(output+="."+window.$C.BUILD_PUSH_NUMBER),"app"==segments[2]&&(output+=":"+getConfigValue("APP_BUILD",0)),output+="/"+postfix}}var root=getConfigValue("MRSPARKLE_ROOT_PATH","/"),combinedPath="/"+getConfigValue("LOCALE","en-US")+output;return""==root||"/"==root?combinedPath:root+combinedPath}("/static/build/pages/lite")+"/"}(),__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("routers/JobInspector"),__webpack_require__("util/router_utils")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(JobInspectorRouter,router_utils){new JobInspectorRouter;router_utils.start_backbone_history()}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1758:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(1)(!1)).push([module.i,'/*************************************************************************************************/\n/*  BRAND COLORS                                                                                 */\n/*  DO NOT USE DIRECTLY! Use $brandColor instead. See brand.*.pcss for definitions.              */\n/*************************************************************************************************/\n/* Green Splunk Enterprise */\n/* Orange Splunk Lite */\n/* Brand colors */\n/*===============================================================================================*/\n/*  SPLUNK: VARIABLES                                                                            */\n/*  Variables to customize the look and feel of Bootstrap (splunk version).                      */\n/*  See /en-US/static/docs/style/style-guide.html for style guide                                */\n/*===============================================================================================*/\n/*===============================================================================================*/\n/*  WARNING                                                                                      */\n/*  This file has an implicit dependency on the brand variables injected by the                  */\n/*  \'splunk-postcss-theme-import\' postcss plugin.                                                */\n/*===============================================================================================*/\n/*===============================================================================================*/\n/*  SPLUNK: COLORS                                                                               */\n/*===============================================================================================*/\n/*************************************************************************************************/\n/*  NEUTRAL COLORS                                                                               */\n/*                                                                                               */\n/*  PRE IVORY           -> CURRENT VARIABLE                                                      */\n/*  $black              -> $black                                                                */\n/*  $grayDarker         -> $gray20                                                               */\n/*  $grayDark           -> $gray30                                                               */\n/*  $gray               -> $gray45                                                               */\n/*  $grayLight          -> $gray60                                                               */\n/*  $grayLightMedium    -> $gray80                                                               */\n/*  $grayLighter        -> $gray92                                                               */\n/*                         $gray96                                                               */\n/*  $offWhite           -> $gray98                                                               */\n/*  $white              -> $white                                                                */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  SEMANTIC COLORS                                                                              */\n/*                                                                                               */\n/*  PRE IVORY       -> CURRENT VARIABLE                                                          */\n/*  $red            -> $errorColor                                                               */\n/*  $orange         -> $alertColor                                                               */\n/*  $yellow         -> $warningColor                                                             */\n/*  $yellowLight    -> $warningColorL20                                                          */\n/*  $yellowLighter  -> $warningColorL40                                                          */\n/*  $green          -> $successColor                                                             */\n/*  $blue           -> $infoColor                                                                */\n/*  $blueDark       -> $infoColorD40                                                             */\n/*  $pink           -> No Equivalent or $errorColorL30                                           */\n/*  $purple         -> No Equivalent                                                             */\n/*  $teal           -> No Equivalent                                                             */\n/*  $focusColor     -> $accentColorL10                                                           */\n/*************************************************************************************************/\n/* Blue Accent */\n/* Red Error */\n/* Orange Alert */\n/* Yellow Warning */\n/* Green Success */\n/* Blue Info */\n/*************************************************************************************************/\n/*  CATEGORICAL COLORS                                                                           */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  DIVERGING COLORS                                                                             */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  STATIC PATHS                                                                                 */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  TYPOGRAPHY                                                                                   */\n/*************************************************************************************************/\n/*  Lite listing pages */\n/*  empty to use BS default, $fontFamily */\n/*  instead of browser default, bold */\n/*************************************************************************************************/\n/*  SCAFFOLDING                                                                                  */\n/*************************************************************************************************/\n/* Border Colors */\n/*  aliases: $tableBorderColor $tableBorderColorVertical */\n/*  also see: $interactiveBorderColor */\n/* Borders */\n/* Border Radius */\n/* For containers without a wrapper */\n/* For for containers with a wrapper, like popdown */\n/* Padding & Margin */\n/* 200% - 40px */\n/* 150% - 30px */\n/* 75% - 15px */\n/* 50% - 10px */\n/* 25% - 5px */\n/* Popdown Arrows */\n/* Large Icons */\n/*************************************************************************************************/\n/*  TRANSITIONS                                                                                  */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  HORIZONTAL FORMS & LISTS                                                                     */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  Z-INDEX                                                                                      */\n/*************************************************************************************************/\n/*  If a variable does not suit your purpose, set a value relatively such as, $zindexModal +1 */\n/*  Splunk Lite */\n/*  Splunk Lite */\n/*  Sidebar Component */\n/*  Sidebar Component */\n/*  timerange popdown needs to be above modal + backdrop */\n/*  top interactive element */\n/*  top interactive element */\n/*  top uninteractive */\n/*  top uninteractive */\n/*************************************************************************************************/\n/*  TABLES                                                                                       */\n/*************************************************************************************************/\n/*  overall background-color */\n/*************************************************************************************************/\n/*  FORMS                                                                                       */\n/*************************************************************************************************/\n/*  base input height + 10px vertical padding + 2px top/bottom border */\n/*  This is generally overridden. */\n/*************************************************************************************************/\n/*  MODAL                                                                                        */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  POPUP                                                                                        */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  TABS                                                                                        */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  MENU                                                                                         */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  BASE INTERACTIVE                                                                             */\n/*************************************************************************************************/\n/*  text */\n/*  background */\n/*  borders */\n/*  shadow */\n/*************************************************************************************************/\n/*  BASE INTERACTIVE ERROR                                                                       */\n/*************************************************************************************************/\n/*  text */\n/*  background */\n/*************************************************************************************************/\n/*  BUTTONS                                                                                      */\n/*************************************************************************************************/\n/* 1 rem */\n/*************************************************************************************************/\n/*  PRIMARY BUTTONS                                                                              */\n/*************************************************************************************************/\n/*  text */\n/*  background */\n/*  borders */\n/*  shadow */\n/*************************************************************************************************/\n/*  PILL BUTTONS                                                                                 */\n/*************************************************************************************************/\n/*  text */\n/*  background */\n/*************************************************************************************************/\n/*  COMPONENT VARIABLES                                                                          */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  NAVBAR                                                                                       */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  APP BAR                                                                                      */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  ACCORDION                                                                                    */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  CONCERTINA                                                                                   */\n/*  Concertina has the same color as Accordion, maybe we should just reuse them?                 */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  TOOLTIPS & POPOVERS                                                                          */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  SELECTORS FOR CUSTOMIZING SPECIFIC LOCALES                                                   */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  DASHBOARDS                                                                                   */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  VIZ & VIZ PICKERS                                                                            */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  MAPS                                                                                         */\n/*************************************************************************************************/\n/* leaflet popup defaults */\n/*************************************************************************************************/\n/*  Search IDE                                                                                   */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  Date Picker                                                                                  */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  Time Range Picker                                                                            */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  Events Viewer                                                                                */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  Misc                                                                                         */\n/*************************************************************************************************/\n/*===============================================================================================*/\n/*  SPLUNK: MIXINS                                                                               */\n/*  Snippets of reusable CSS to develop faster and keep code readable                            */\n/*===============================================================================================*/\n/*  Reset */\n/*  ------------------ */\n/*  Link */\n/*  ------------------ */\n/*************************************************************************************************/\n/*  FOCUS STATES                                                                                 */\n/*************************************************************************************************/\n/* Use when are outer focus glow will be block (i.e Menu Items). Provide background color.*/\n/*  Block elements change the background color */\n/*  Block elements change the background color and spread via box-shadow */\n/*************************************************************************************************/\n/*  INTERACTIVE                                                                                  */\n/*  These are by any element that can be clicked, such as buttons, menus and table headings.     */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Interactive style:                          */\n/*  @params:                                    */\n/*      Background Color                        */\n/*      Border Color                            */\n/*      Box Shadow                              */\n/*      Text Color                              */\n/*      Transition                              */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Primary interactive style:                  */\n/*  @params:                                    */\n/*      Background Color                        */\n/*      Box Shadow                              */\n/*      Text Color                              */\n/*      Transition                              */\n/*----------------------------------------------*/\n/*************************************************************************************************/\n/*  INTERACTIVE ERROR                                                                            */\n/*  These are by any interactive element that is is in an error state.                           */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  BUTTONS                                                                                      */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Pills, Links                                */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Define states of buttons:                   */\n/*  :hover, :active, disabled and :focus        */\n/*  @params:                                    */\n/*      Hover Mixin                             */\n/*      Active Mixin                            */\n/*      Disabled Mixin                          */\n/*      Focus Mixin                             */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Button Padding:                             */\n/*  @params:                                    */\n/*      Vertical Padding                        */\n/*      Horizontal Padding                      */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Primary Button Padding:                     */\n/*  @params:                                    */\n/*      Vertical Padding                        */\n/*      Horizontal Padding                      */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Button Padding For Other Button Sizes:      */\n/*  @params:                                    */\n/*      Vertical Padding                        */\n/*      Horizontal Padding                      */\n/*      Button Icon Margin Top                  */\n/*----------------------------------------------*/\n/*  Draggable Handle */\n/*************************************************************************************************/\n/*  FONTS                                                                                        */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Define Font Family:                         */\n/*  @params:                                    */\n/*      Font Name                               */\n/*      Name of Font File                       */\n/*      Font Format                             */\n/*      Font Weight                             */\n/*      Font Style                              */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Create a heading                            */\n/*  @params:                                    */\n/*      Font Size                               */\n/*      Margin                                  */\n/*      Font Color                              */\n/*      Text Transform                          */\n/*----------------------------------------------*/\n/*************************************************************************************************/\n/*  UTILITY MIXINS                                                                               */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Clearfix:                                   */\n/*  For clearing floats like a boss h5bp.com/q  */\n/*----------------------------------------------*/\n/*  Placeholder text */\n/* Basic input styles */\n/* Sets Modal width and margin */\n/* Define card style. Add white background and shadow. */\n/* Workaround for table shadows in IE. Don\'t use this mixin, use create-card-table */\n/* Define card style on tables. Adds workaround for IE */\n/* Cover browser specific radio button with styled radio button. */\n/* Can only be used if label comes immediately after input[type=radio] */\n/* Use to cover button in .radio class */\n/*-------------------------------------------------------------------------*/\n/*  CSS image replacement                                                  */\n/*  For clearing floats like a boss h5bp.com/q                             */\n/*  Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757  */\n/*-------------------------------------------------------------------------*/\n/*************************************************************************************************/\n/*  ICONS                                                                                        */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  FORMS                                                                                        */\n/*************************************************************************************************/\n/*  Block level inputs  */\n/*************************************************************************************************/\n/*  COMPONENT MIXINS                                                                             */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Horizontal Dividers:                        */\n/*  Dividers (basically an hr) within dropdowns */\n/*  and nav lists.                              */\n/*  @params:                                    */\n/*      Border Color                            */\n/*----------------------------------------------*/\n/*----------------------------------------------*/\n/*  Navbar Vertical Align:                      */\n/*  Vertically center elements in the navbar.   */\n/*  Example: an element has a height of 30px,   */\n/*  so write out `.navbarVerticalAlign(30px);`  */\n/*  to calculate the appropriate top margin.    */\n/*  @params:                                    */\n/*      Element Height                          */\n/*----------------------------------------------*/\n/*************************************************************************************************/\n/*  PRINTING                                                                                     */\n/*************************************************************************************************/\n/*************************************************************************************************/\n/*  POPDOWN                                                                                      */\n/*************************************************************************************************/\n/*----------------------------------------------*/\n/*  Arrow:                                      */\n/*  Create an arrow.                            */\n/*  @params:                                    */\n/*      Arrow Direction (up, down, left, right) */\n/*      Arrow Color                             */\n/*      Arrow Size                              */\n/*----------------------------------------------*/\n/*  popdown body */\n/*************************************************************************************************/\n/*  FULL PAGE LAYOUT                                                                             */\n/*************************************************************************************************/\n.job-inspector {\n\n  font-size: 12px;\n  background-color: #FFFFFF;\n  font-family: "Splunk Platform Sans", "Proxima Nova", Roboto, Droid, "Helvetica Neue", Helvetica, Arial, sans-serif;\n\n}\n.job-inspector .alerts.shared-flashmessages {\n    padding: 20px 0 0 20px;\n  }\n.job-inspector .header {\n    background-color: #171D21;\n    border-bottom: 1px solid #E1E6EB;\n    padding: 5px 14px;\n    font-size: 12px;\n  }\n.job-inspector .header h1 {\n      margin: 5px 0;\n      color: #FFFFFF;\n      font-size: 18px;\n      font-weight: normal;\n    }\n.job-inspector .emphatic {\n    font-weight: bold;\n  }\n.job-inspector h2 {\n    font-size: 12px;\n    font-weight: bold;\n    color: #3C444D;\n  }\n.job-inspector .accordion-heading {\n    font-size: 12px;\n    font-weight: bold;\n  }\n.job-inspector .job-overview {\n    padding: 10px 10px 20px 14px;\n    background-color: #F2F4F5;\n  }\n.job-inspector .job-overview > p a.search-log {\n        text-decoration: underline;\n      }\n.job-inspector .job-overview > p a.dfs-log {\n        text-decoration: underline;\n      }\n.job-inspector .job-overview .summary pre {\n        white-space: normal;\n      }\n.job-inspector .job-overview .summary pre .highlighted {\n          background-color: #F8BE34;\n          padding: 2px;\n        }\n.job-inspector .job-overview .summary .messages li {\n          list-style-type: none;\n          margin-left: 10px;\n        }\n.job-inspector .job-overview .summary .messages li .text {\n            font-weight: bold;\n          }\n.job-inspector .job-execution-cost {\n    border-top: 1px solid #C3CBD4;\n    padding: 0 14px;\n    font-size: 10px;\n  }\n.job-inspector .job-execution-cost table th {\n        padding: 4px 10px;\n        text-align: left;\n        background-color: #E1E6EB;\n      }\n.job-inspector .job-execution-cost table tr.sub img.durationBar {\n            opacity: 0.25;\n          }\n.job-inspector .job-execution-cost table td {\n        padding: 4px 10px;\n        border-bottom: 1px dotted #C3CBD4;\n        vertical-align: top;\n      }\n.job-inspector .job-execution-cost table td.numeric {\n            text-align: right;\n          }\n.job-inspector .job-execution-cost table td img {\n          height: 1px;\n        }\n.job-inspector .job-execution-cost table td img.durationBar {\n            height: 12px;\n            background-color: #000000;\n            opacity: 0.5;\n          }\n.job-inspector .job-properties {\n    padding: 0 14px;\n    font-size: 10px;\n  }\n.job-inspector .job-properties table {\n      margin-bottom: 15px;\n      border-collapse: collapse;\n      width:100%;\n    }\n.job-inspector .job-properties table tr.additional-links a {\n          padding-right: 10px;\n          padding-bottom: 10px;\n          text-decoration: underline;\n          display: block;\n        }\n.job-inspector .job-properties table tr.additional-links a.search-log {\n            display: inline;\n          }\n.job-inspector .job-properties table tr.additional-links a.dfs-log {\n            display: inline;\n          }\n.job-inspector .job-properties table tr.additional-links a.peer-link {\n            display: inline;\n          }\n.job-inspector .job-properties table tr.additional-links td.job-prop-value {\n            white-space: normal;\n            font-size: 12px;\n          }\n.job-inspector .job-properties table td {\n        padding: 4px 10px;\n        border-bottom: 1px dotted #C3CBD4;\n        vertical-align: top;\n      }\n.job-inspector .job-properties table td.job-prop-name {\n          font-weight: bold;\n          white-space: nowrap;\n          font-size: 10px;\n          background-color: #F2F4F5;\n        }\n.job-inspector .job-properties table td.job-prop-value {\n          font-weight: normal;\n          font-family: "Splunk Platform Mono", Inconsolata, Consolas, "Droid Sans Mono", Monaco, "Courier New", Courier, monospace;\n        }\n.job-inspector .footer {\n    padding: 10px;\n  }\n.accordion-group {\n  padding-top: 14px;\n}\n.accordion-group .accordion-toggle {\n    padding-left: 15px;\n    background: none;\n    border: 0;\n  }\n.accordion-group .accordion-toggle .icon-accordion-toggle {\n      left: 0;\n    }\n.accordion-group .accordion-body {\n    padding: 14px 0 0 14px;\n  }\n',""])},"routers/JobInspector":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),__webpack_require__("routers/Base"),__webpack_require__("models/classicurl"),__webpack_require__("models/search/Job"),__webpack_require__("models/services/saved/Search"),__webpack_require__("views/job_inspector/Master"),__webpack_require__("util/splunkd_utils")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,BaseRouter,classicurlModel,SearchJobModel,SavedSearchModel,JobInspectorView,splunkd_utils){return BaseRouter.extend({initialize:function(){BaseRouter.prototype.initialize.apply(this,arguments),this.enableSplunkBar=!1,this.enableAppBar=!1,this.showAppsList=!1,this.fetchManagers=!1,this.fetchAppLocal=!1,this.model.searchJob=new SearchJobModel,this.model.savedSearch=new SavedSearchModel,this.deferreds.searchJobDeferred=$.Deferred(),this.deferreds.savedSearchJobDeferred=$.Deferred()},page:function(locale,app,page){BaseRouter.prototype.page.apply(this,arguments),classicurlModel.fetch({success:function(){if(classicurlModel.get("sid"))this.model.searchJob.set(this.model.searchJob.idAttribute,classicurlModel.get("sid")),this.model.searchJob.fetch({data:{message_level:"debug"},success:function(model,response){var savedSearchId=this.model.searchJob.getSavedSearchId();savedSearchId?(this.model.savedSearch.set(this.model.savedSearch.idAttribute,savedSearchId),this.model.savedSearch.fetch({success:function(){this.deferreds.savedSearchJobDeferred.resolve()}.bind(this),error:function(){this.model.savedSearch.unset(this.model.savedSearch.idAttribute),this.deferreds.savedSearchJobDeferred.resolve()}.bind(this)})):this.deferreds.savedSearchJobDeferred.resolve(),this.deferreds.searchJobDeferred.resolve()}.bind(this),error:function(model,response){this.model.searchJob.unset(this.model.searchJob.idAttribute),this.deferreds.searchJobDeferred.resolve(),this.deferreds.savedSearchJobDeferred.resolve()}.bind(this)});else{var noSidError=splunkd_utils.createSplunkDMessage(splunkd_utils.FATAL,_("No sid was specified.").t());this.model.searchJob.trigger("error",this.model.searchJob,noSidError),this.deferreds.searchJobDeferred.resolve(),this.deferreds.savedSearchJobDeferred.resolve()}}.bind(this)}),$.when(this.deferreds.pageViewRendered,this.deferreds.searchJobDeferred,this.deferreds.savedSearchJobDeferred).then(function(){this.jobInspector=new JobInspectorView({model:{searchJob:this.model.searchJob,savedSearch:this.model.savedSearch,application:this.model.application,serverInfo:this.model.serverInfo}}),this.setPageTitle(_("Search job inspector").t()),this.pageView.$(".main-section-body").html(this.jobInspector.render().el),$(".preload").replaceWith(this.pageView.el)}.bind(this))}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/Footer":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("shim/splunk.util"),__webpack_require__("stubs/i18n")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,splunkUtil,i18n){return Base.extend({moduleId:module.i,className:"footer",initialize:function(){Base.prototype.initialize.apply(this,arguments)},render:function(){return this.$el.html(this.compiledTemplate({application:this.model.application,serverInfo:this.model.serverInfo,splunkUtil:splunkUtil,i18n:i18n})),this},template:'                <p>                    <span class="emphatic"><%- _("Server info: ").t() %></span>                     <%- splunkUtil.sprintf(_("Splunk %(version)s, %(host)s, %(dateTime)s ").t(), {                            version: serverInfo.getVersion(),                            host: window.location.host,                            dateTime: i18n.format_datetime(new Date(),"eee MMM dd", "HH:mm:ss yyyy")                    }) %>                    <span class="emphatic"><%- _("User: ").t() %></span><%- application.get("owner")%>                </p>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/JobExecutionCost":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/delegates/Accordion"),__webpack_require__("util/string_utils"),__webpack_require__("stubs/i18n")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,Accordion,stringUtils,i18n){return Base.extend({moduleId:module.i,className:"job-execution-cost accordion",initialize:function(){Base.prototype.initialize.apply(this,arguments)},constructPerformaceData:function(){var componentInfo,maxDuration=0,isNewBlock=!1,currentLevel=0,subComponentStartIndex=0,subComponentBlockPairs=[],subComponentStack=[],performanceData=[];return _.each(this.model.searchJob.entry.content.performance.attributes,function(compVal,compName){for(componentInfo={component:compName,invocationCount:compVal.invocations?parseInt(compVal.invocations,10):0,inputCount:compVal.input_count?parseInt(compVal.input_count,10):0,outputCount:compVal.output_count?parseInt(compVal.output_count,10):0,duration:compVal.duration_secs?parseFloat(compVal.duration_secs):0,displayLevel:0},maxDuration=Math.max(maxDuration,componentInfo.duration),componentInfo.displayDuration=componentInfo.duration;subComponentStack.length>0&&!stringUtils.strStartsWith(compName,subComponentStack[subComponentStack.length-1]+".");)subComponentStack.pop();componentInfo.displayLevel=subComponentStack.length,subComponentStack.push(compName),performanceData.push(componentInfo)}),_.each(performanceData,function(data,index){data.displayDuration=maxDuration?data.displayDuration/maxDuration:0,data.displayLevel!==currentLevel&&(isNewBlock?subComponentBlockPairs.push([subComponentStartIndex,index]):subComponentStartIndex=index,currentLevel=data.displayLevel,isNewBlock=!isNewBlock)}),_.each(subComponentBlockPairs,function(pair){var tempBlock=performanceData.slice(pair[0],pair[1]);tempBlock.sort(function(a,b){return a.duration>b.duration?-1:a.duration<b.duration?1:0});for(var i=pair[0],j=0;i<pair[1];i++,j++)performanceData[i]=tempBlock[j]}),performanceData},render:function(){return this.$el.html(this.compiledTemplate({performance:this.constructPerformaceData(),i18n:i18n})),this.accordion=new Accordion({el:this.el,collapsible:!0}),this},template:'                <div class="accordion-group">                    <div class="accordion-heading">                        <a class="accordion-toggle" href="#">                            <i class="icon-accordion-toggle"></i>                            <%- _("Execution costs").t() %>                        </a>                    </div>                    <div class="accordion-body">                        <table class="job-execution-costs-table">                            <thead>                                <tr>                                    <th tabindex="0" colspan="2"><%- _("Duration (seconds)").t() %></th>                                    <th tabindex="0"><%- _("Component").t() %></th>                                    <th tabindex="0"><%- _("Invocations").t() %></th>                                    <th tabindex="0"><%- _("Input count").t() %></th>                                    <th tabindex="0"><%- _("Output count").t() %></th>                                </tr>                            </thead>                            <tbody>                                <% _.each(performance, function(component) { %>                                    <tr class="<%- component.displayLevel ?  "sub" : ""  %>">                                        <td>                                            <img src="/static/img/skins/default/a.gif" width=<%- component.displayLevel * 15 %>px />                                             <img src="/static/img/skins/default/a.gif" alt="<%- _("Duration bar image").t() %>" class="durationBar"                                                 width=<%- Math.max(1, parseInt(component.displayDuration * 150)) %>px />                                         </td>                                        <td class="numeric" tabindex="0"><%- i18n.format_number(component.duration, "#,###,###.00") %></td>                                        <td>                                            <img src="/static/img/skins/default/a.gif" width=<%- component.displayLevel * 15 %>px />                                             <span tabindex="0"><%-component.component %></span>                                        </td>                                        <td class="numeric" tabindex="0">                                            <% if(component.invocationCount) { %>                                                <%- i18n.format_number(component.invocationCount) %>                                            <% } else { %>                                                -                                             <% } %>                                        </td>                                        <td class="numeric" tabindex="0">                                            <% if(component.inputCount) { %>                                                <%- i18n.format_number(component.inputCount) %>                                            <% } else { %>                                                -                                             <% } %>                                        </td>                                        <td class="numeric" tabindex="0">                                            <% if(component.outputCount) { %>                                                <%- i18n.format_number(component.outputCount) %>                                            <% } else { %>                                                -                                             <% } %>                                        </td>                                    </tr>                                <% }) %>                            </tbody>                        </table>                    </div>                </div>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/JobOverview":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("uri/route"),__webpack_require__("util/time"),__webpack_require__("shim/splunk.util"),__webpack_require__("stubs/i18n")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,route,time_utils,splunkUtil,i18n){return Base.extend({moduleId:module.i,className:"job-overview",initialize:function(){Base.prototype.initialize.apply(this,arguments)},getFormattedTimeFromIso:function(isoDate){var jsDate=time_utils.isoToDateObject(isoDate);return i18n.format_datetime_microseconds(time_utils.jsDateToSplunkDateTimeWithMicroseconds(jsDate))},render:function(){var earliestTime=_.isUndefined(this.model.searchJob.entry.content.get("earliestTime"))?_("(earliest indexed event)").t():this.getFormattedTimeFromIso(this.model.searchJob.entry.content.get("earliestTime")),latestTime=_.isUndefined(this.model.searchJob.entry.content.get("latestTime"))?_("(latest indexed event)").t():this.getFormattedTimeFromIso(this.model.searchJob.entry.content.get("latestTime"));return this.$el.html(this.compiledTemplate({splunkUtil:splunkUtil,i18n:i18n,route:route,searchJob:this.model.searchJob,application:this.model.application,earliestTime:earliestTime,latestTime:latestTime,docLink:route.docHelp(this.model.application.get("root"),this.model.application.get("locale"),"inspector.noresults")})),this},template:'                <div class="summary">                    <% if (searchJob.entry.content.get("isZombie")) { %>                        <p><%- _("This search has encountered a fatal error and has been marked as zombied.").t() %></p>                    <% } else if (searchJob.entry.content.get("isFailed")) { %>                        <p>                            <%- _("This search did not successfully execute.  Any results returned from this job                                 are not consistent and should not be used.").t()                             %>                        </p>                        <pre><%- this.model.searchJob.getSearch() %></pre>                    <% } else if (searchJob.entry.content.get("isPaused")) { %>                        <p><%- _("This search is currently paused and must be unpaused before continuing.").t() %></p>                    <% } else if (!searchJob.entry.content.get("isDone")) { %>                        <p>                            <%- splunkUtil.sprintf(_("This search is still running and is approximately %s                                 complete.").t(), i18n.format_percent(searchJob.entry.content.get("doneProgress")))                             %>                        </p>                    <% } else if (searchJob.entry.content.get("isDone")) { %>                        <% if (searchJob.entry.content.get("resultCount") == 0) { %>                            <% if (searchJob.entry.content.get("eventCount") == 0) { %>                                <% if (!searchJob.isDataFabricEnabled()) { %>                                    <p>                                        <%- splunkUtil.sprintf(_("This search has completed in %s seconds, but did not match any events. The terms                                             specified in the highlighted portion of the search:").t(), i18n.format_number(searchJob.entry.content.get("runDuration")))                                         %>                                    </p>                                    <pre>                                        <span class="highlighted"><%- searchJob.entry.content.get("eventSearch") || _("None").t() %></span>                                        <% if (searchJob.entry.content.get("reportSearch")) { %>                                            <span>| <%- searchJob.entry.content.get("reportSearch") %></span>                                        <% } %>                                    </pre>                                <% } else { %>                                    <p>                                        <%- splunkUtil.sprintf(_("This search has completed in %s seconds, but did not match any events.                                         The search:").t(), i18n.format_number(searchJob.entry.content.get("runDuration")))                                         %>                                    </p>                                    <pre>                                        <span> <%- searchJob.entry.content.get("search") %></span>                                    </pre>                                <% } %>                                <p>                                    <%- _("over the time range:").t() %>                                </p>                                <pre>                                    <%- earliestTime %> - <%- latestTime %>                                </pre>                                <p>                                    <%- _("did not return any data. Possible solutions are to:").t() %>                                </p>                                <ul>                                    <li><%- _("relax the primary search criteria").t() %></li>                                    <li><%- _("widen the time range of the search").t() %></li>                                    <li>                                        <%- _("check that the default search indexes for your account include the desired indexes").t() %>                                    </li>                                </ul>                            <% } else if (searchJob.entry.content.get("reportSearch") != "None" &&                                         searchJob.entry.content.get("reportSearch").length > 0 ) { %>                                <%= splunkUtil.sprintf(_("This search has completed and found <span class=\'emphatic\'>%(eventCount)s </span>                                      matching %(entityName)s in %(runDuration)s seconds. However, the transforming commands in the                                       highlighted portion of the following search:").t(),                                       {eventCount: i18n.format_number(searchJob.entry.content.get("eventCount")),                                        entityName: i18n.ungettext("event", "events", searchJob.entry.content.get("eventCount")),                                        runDuration: i18n.format_number(searchJob.entry.content.get("runDuration"))                                      })                                %>                                <pre>                                    <% if (searchJob.entry.content.get("eventSearch")) { %>                                        <span class="muted">                                            <%- searchJob.entry.content.get("eventSearch") %> |                                        </span>                                    <% } %>                                    <span class="highlighted">                                        <%- searchJob.entry.content.get("reportSearch") %>                                    </span>                                </pre>                                <p>                                    <%- _("over the time range:").t() %>                                </p>                                <pre>                                    <%- earliestTime %> - <%- latestTime %>                                </pre>                                <p>                                    <%- _("generated no results.  Possible solutions are to:").t() %>                                </p>                                <ul>                                    <li><%- _("check the syntax of the commands").t() %></li>                                    <li>                                        <%- _("verify that the fields expected by the report commands are present in the events").t() %>                                    </li>                                </ul>                            <% } else { %>                                <p>                                    <%- _("This search has completed, but did not return any results.").t() %>                                </p>                            <% } %>                            <p>                                <%- _("Learn more about troubleshooting empty search results at").t() %>                                <a target="_blank" href="<%- docLink %>" title="<%- _("Splunk help").t() %>">                                    <%- _("Splunk Documentation").t() %>                                    <i class="icon-external"></i>                                </a>                            </p>                        <% } else { %>                            <p>                                <%= splunkUtil.sprintf(_("This search has completed and has returned <span class=\'emphatic\'>%(resultCount)s</span> %(resultEntity)s                                  by scanning <span class=\'emphatic\'>%(scanCount)s</span> %(eventEntity)s in <span class=\'emphatic\'>%(runDuration)s </span> seconds").t(), {                                    resultCount: i18n.format_number(searchJob.entry.content.get("resultCount")),                                    resultEntity: i18n.ungettext("result", "results", searchJob.entry.content.get("resultEntity")),                                    scanCount: i18n.format_number(searchJob.entry.content.get("scanCount")),                                    eventEntity: i18n.ungettext("event", "events", searchJob.entry.content.get("eventEntity")),                                    runDuration: i18n.format_number(searchJob.entry.content.get("runDuration"))                                })                                %>                            </p>                            <% if (searchJob.entry.content.get("isSavedSearch")) { %>                                <p>                                    <%- _("This search is an instance of the saved search:").t() %>                                    <span class="emphatic"><%- searchJob.entry.content.get("label") %></span>                                </p>                            <% } %>                        <% } %>                        <% if (searchJob.entry.content.get("messages").length > 0) { %>                            <div class="messages">                                <p><%- _("The following messages were returned by the search subsystem:").t() %></p>                                <ul>                                    <% _.each(searchJob.getMessages(),function(message) { %>                                        <li>                                            <%- message.type %> :                                             <span class="text"> <%= splunkUtil.getWikiTransform(message.text) %> </span>                                            <% if (message.help) { %>                                                <a href="<%- route.docHelp(application.get("root"), application.get("locale"), message.help) %>"                                                    target="_blank">                                                    <%- _("Learn More").t() %>                                                    <i class="icon-external"></i>                                                </a>                                            <% } %>                                        </li>                                    <% }) %>                                 </ul>                            </div>                        <% } %>                    <% } %>                </div>                <p>                    (<%- _("SID:").t() %>                     <%- searchJob.id %>)                    <% _.each(searchJob.getAvailableSearchLogs(), function(link) { %>                        <a class="search-log" href="<%- route.searchJobUrls(application.get("root"),                                                         application.get("locale"),                                                         searchJob.id,                                                         link,                                                         {data: {outputMode:"raw"}}) %>">                            <%- link %>                        </a>                    <% }) %>                </p>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/Master":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/FlashMessages"),__webpack_require__("views/job_inspector/JobOverview"),__webpack_require__("views/job_inspector/JobExecutionCost"),__webpack_require__("views/job_inspector/job_properties/Master"),__webpack_require__("views/job_inspector/Footer"),__webpack_require__("views/job_inspector/Master.pcss")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,FlashMessage,JobOverviewView,JobExecutionCost,SearchJobPropertiesView,FooterView,css){return Base.extend({moduleId:module.i,className:"job-inspector",initialize:function(){Base.prototype.initialize.apply(this,arguments),this.model.searchJob.isNew()?(this.children.flashMessage=new FlashMessage({model:this.model.searchJob}),this.children.footerView=new FooterView({model:{application:this.model.application,serverInfo:this.model.serverInfo}})):(this.children.jobOverviewView=new JobOverviewView({model:{searchJob:this.model.searchJob,application:this.model.application}}),this.children.jobExecutionCost=new JobExecutionCost({model:{searchJob:this.model.searchJob}}),this.children.searchJobPropertiesView=new SearchJobPropertiesView({model:{searchJob:this.model.searchJob,savedSearch:this.model.savedSearch,application:this.model.application}}),this.children.footerView=new FooterView({model:{application:this.model.application,serverInfo:this.model.serverInfo}}))},render:function(){return this.$el.html(this.compiledTemplate({})),this.model.searchJob.isNew()?(this.children.flashMessage.render().appendTo(this.$el),this.children.footerView.render().appendTo(this.$el)):(this.children.jobOverviewView.render().appendTo(this.$el),this.children.jobExecutionCost.render().appendTo(this.$el),this.children.searchJobPropertiesView.render().appendTo(this.$el),this.children.footerView.render().appendTo(this.$el)),this},template:'                <div class="header">                    <h1><%- _("Search job inspector").t() %></h1>                </div>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/Master.pcss":function(module,exports,__webpack_require__){var content=__webpack_require__(1758);"string"==typeof content&&(content=[[module.i,content,""]]);var options={sourceMap:!1,hmr:!0,transform:void 0,insertInto:void 0};__webpack_require__(2)(content,options);content.locals&&(module.exports=content.locals)},"views/job_inspector/job_properties/Master":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/job_inspector/job_properties/Row"),__webpack_require__("views/shared/delegates/Accordion"),__webpack_require__("uri/route"),__webpack_require__("stubs/i18n")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,JobPropertyRow,Accordion,route,i18n){return Base.extend({moduleId:module.i,className:"job-properties accordion",initialize:function(){Base.prototype.initialize.apply(this,arguments),this.peerNameList=this.getRemotePeers("remoteSearchLogs"),this.dfsPeerNameList=this.getRemotePeers("remoteDFSLogs")},getRemotePeers:function(key){return this.model.searchJob.entry.content.get(key)&&this.model.searchJob.entry.content.get(key).length>0&&_.isString(this.model.searchJob.entry.content.get(key)[0])?this.model.searchJob.entry.content.get(key)[0].split("\n"):[]},generateSortedJobProperties:function(model,additionalProps){var sortedJobProps=[],unsortedJobProps=_.extend({},model.entry.content.attributes,{"eai:acl":model.entry.acl},additionalProps);return unsortedJobProps.hasOwnProperty("messages")&&delete unsortedJobProps.messages,_.isEmpty(unsortedJobProps.custom)&&delete unsortedJobProps.custom,_.each(unsortedJobProps,function(value,prop){sortedJobProps.push({key:prop,value:value})}),sortedJobProps=_.sortBy(sortedJobProps,"key")},searchLogUrl:function(page,options){return route.searchJobUrls(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,page,options)},render:function(){var additionalSearchJobProps,hasSavedSearch=!this.model.savedSearch.isNew();if(this.$el.html(this.compiledTemplate({i18n:i18n,hasSavedSearch:hasSavedSearch,searchJob:this.model.searchJob,timelineLink:route.searchJobTimeline(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,{data:{outputMode:"xml"}}),summaryLink:route.searchJobSummary(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,{data:{outputMode:"xml"}}),searchLogLink:this.searchLogUrl.bind(this),peerNameList:this.peerNameList?this.peerNameList:[],dfsPeerNameList:this.dfsPeerNameList?this.dfsPeerNameList:[]})),hasSavedSearch){var additionalSavedSearchProperties={"eai:attributes":this.model.savedSearch.entry.fields},$savedSearchTableBody=this.$(".saved-search-properties > .accordion-body > table > tbody");this.renderPropertyRows(this.generateSortedJobProperties(this.model.savedSearch,additionalSavedSearchProperties),$savedSearchTableBody)}additionalSearchJobProps={createTime:this.model.searchJob.entry.attributes.published,custom:this.model.searchJob.entry.content.custom.attributes,modifiedTime:this.model.searchJob.entry.attributes.updated,request:this.model.searchJob.entry.content.request.attributes,runtime:this.model.searchJob.entry.content.runtime.attributes,search:this.model.searchJob.getSearch()},this.peerNameList&&this.peerNameList.length>0&&(additionalSearchJobProps.peerNameList=this.peerNameList),this.dfsPeerNameList&&this.dfsPeerNameList.length>0&&(additionalSearchJobProps.dfsPeerNameList=this.dfsPeerNameList);var $searchPropertiesTableBody=this.$(".search-job-properties > .accordion-body > table > tbody");return this.renderPropertyRows(this.generateSortedJobProperties(this.model.searchJob,additionalSearchJobProps),$searchPropertiesTableBody),this.accordion=new Accordion({el:this.el,collapsible:!0,defaultGroup:""}),this},renderPropertyRows:function(props,$tableBody){var fragment=document.createDocumentFragment();_.each(props,function(prop,index){var rowId="row"+index;this.children[rowId]=new JobPropertyRow({prop:prop}),this.children[rowId].render().appendTo(fragment)}.bind(this)),$tableBody.prepend(fragment)},template:'                <% if(hasSavedSearch) { %>                    <div class="saved-search-properties accordion-group">                        <div class="accordion-heading">                            <a class="accordion-toggle" href="#">                                <i class="icon-accordion-toggle"></i>                                <%- _("Saved search properties").t() %>                            </a>                        </div>                        <div class="accordion-body">                            <table>                                <tbody></tbody>                            </table>                        </div>                    </div>                <% } %>                <div class="search-job-properties accordion-group">                    <div class="accordion-heading">                        <a class="accordion-toggle" href="#">                            <i class="icon-accordion-toggle"></i>                            <%- _("Search job properties").t() %>                        </a>                    </div>                    <div class="accordion-body">                        <table>                            <tbody>                                <tr class="additional-links">                                    <td class="job-prop-name" tabindex="0"><%- _("Additional info").t() %></td>                                    <td class="job-prop-value">                                        <% if(searchJob.isTimelineAvailable() && !searchJob.isDataFabricEnabled()) { %>                                            <a href="<%- timelineLink %>"><%- _("timeline").t() %></a>                                        <% } %>                                        <% if(searchJob.isSummaryAvailable()) { %>                                            <a href="<%- summaryLink %>"><%- _("field summary").t() %></a>                                        <% } %>                                        <% _.each(searchJob.getAvailableSearchLogs(), function(link) { %>                                            <div>                                            <% if(link.indexOf("search.log") !== -1) { %>                                                <a class="search-log" href="<%- searchLogLink(link, {data: {outputMode:"raw"}}) %>">                                                    <%- link %>                                                </a>                                                <% if(peerNameList.length > 0) { %>                                                    <span>(</span>                                                        <% _.each(peerNameList, function(peerName) { %>                                                            <a class="peer-link" href="<%- searchLogLink(link, {data: {peer: peerName, outputMode:"raw"}}) %>">                                                                <%- peerName %>                                                            </a>                                                        <% }) %>                                                    <span>)</span>                                                <% } %>                                            <% } %>                                            <% if(link.indexOf("dfs.log") !== -1) { %>                                                <a class="dfs-log" href="<%- searchLogLink(link, {data: {outputMode:"raw"}}) %>">                                                    <%- link %>                                                </a>                                                <% if(dfsPeerNameList.length > 0) { %>                                                    <span>(</span>                                                        <% _.each(dfsPeerNameList, function(peerName) { %>                                                            <a class="peer-link" href="<%- searchLogLink(link, {data: {peer: peerName, outputMode:"raw"}}) %>">                                                                <%- peerName %>                                                            </a>                                                        <% }) %>                                                    <span>)</span>                                                <% } %>                                            <% } %>                                            </div>                                        <% }) %>                                    </td>                                </tr>                            </tbody>                        </table>                    </div>                </div>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},"views/job_inspector/job_properties/Row":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/JSONTree")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,JSONTree){return Base.extend({moduleId:module.i,tagName:"tr",initialize:function(){Base.prototype.initialize.apply(this,arguments),_.isObject(this.options.prop.value)&&(this.children.jsonTree=new JSONTree({json:this.options.prop.value}))},render:function(){return this.$el.html(this.compiledTemplate({})),this.children.jsonTree&&this.children.jsonTree.render().appendTo(this.$el.find(".job-prop-value")),this},template:'                <td class="job-prop-name" tabindex="0"><%- this.options.prop.key %></td>                <td class="job-prop-value" tabindex="0">                    <% if (!this.children.jsonTree) { %>                        <%- this.options.prop.value || _("None").t() %>                    <% } %>                </td>            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}});